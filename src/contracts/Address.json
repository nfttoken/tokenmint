{
  "contractName": "Address",
  "abi": [],
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200944d615d1036cf7b531a7ede9b0665a79f56705597415f70c59b83f84fc310c0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058200944d615d1036cf7b531a7ede9b0665a79f56705597415f70c59b83f84fc310c0029",
  "sourceMap": "91:1024:131:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "91:1024:131:-;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary Address {\r\n    /**\r\n     * Returns whether the target address is a contract\r\n     * @dev This function will return false if invoked during the constructor of a contract,\r\n     * as the code is not actually created until after the constructor finishes.\r\n     * @param account address of the account to check\r\n     * @return whether the target address is a contract\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // XXX Currently there is no better way to check if there is a contract in an address\r\n        // than to check the size of the code at that address.\r\n        // See https://ethereum.stackexchange.com/a/14016/36603\r\n        // for more details about how this works.\r\n        // TODO Check this again before the Serenity release, because all addresses will be\r\n        // contracts then.\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\tokenmint-github\\contracts\\open-zeppelin-contracts\\utils\\Address.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/open-zeppelin-contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        10367
      ]
    },
    "id": 10368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10350,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:131"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\r",
        "fullyImplemented": true,
        "id": 10367,
        "linearizedBaseContracts": [
          10367
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10365,
              "nodeType": "Block",
              "src": "543:569:131",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10358,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 10366,
                      "src": "554:12:131",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:7:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10359,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "554:12:131"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 10358,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1049:4:131",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 10352,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1069:7:131",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10360,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1038:57:131"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10361,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10358,
                      "src": "1096:4:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1103:1:131",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1096:8:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10356,
                  "id": 10364,
                  "nodeType": "Return",
                  "src": "1089:15:131"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\nas the code is not actually created until after the constructor finishes.\r\n@param account address of the account to check\r\n@return whether the target address is a contract\r",
            "id": 10366,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10366,
                  "src": "497:15:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "496:17:131"
            },
            "payable": false,
            "returnParameters": {
              "id": 10356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10366,
                  "src": "537:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:6:131"
            },
            "scope": 10367,
            "src": "477:635:131",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10368,
        "src": "91:1024:131"
      }
    ],
    "src": "0:1117:131"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/open-zeppelin-contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        10367
      ]
    },
    "id": 10368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10350,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:131"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\r",
        "fullyImplemented": true,
        "id": 10367,
        "linearizedBaseContracts": [
          10367
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10365,
              "nodeType": "Block",
              "src": "543:569:131",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10358,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 10366,
                      "src": "554:12:131",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:7:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10359,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "554:12:131"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 10358,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1049:4:131",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 10352,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1069:7:131",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10360,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1038:57:131"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10361,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10358,
                      "src": "1096:4:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1103:1:131",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1096:8:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10356,
                  "id": 10364,
                  "nodeType": "Return",
                  "src": "1089:15:131"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\nas the code is not actually created until after the constructor finishes.\r\n@param account address of the account to check\r\n@return whether the target address is a contract\r",
            "id": 10366,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10366,
                  "src": "497:15:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "496:17:131"
            },
            "payable": false,
            "returnParameters": {
              "id": 10356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10366,
                  "src": "537:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:6:131"
            },
            "scope": 10367,
            "src": "477:635:131",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10368,
        "src": "91:1024:131"
      }
    ],
    "src": "0:1117:131"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-02-04T16:11:06.282Z"
}