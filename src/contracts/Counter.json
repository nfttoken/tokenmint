{
  "contractName": "Counter",
  "abi": [],
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820a6d9244540835e5c7d6050a65926c72779a7f5ec039d51e10931d7e530df30f50029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820a6d9244540835e5c7d6050a65926c72779a7f5ec039d51e10931d7e530df30f50029",
  "sourceMap": "667:229:33:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "667:229:33:-;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Counter\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides an incrementing uint256 id acquired by the `Counter#next` getter.\r\n * Use this for issuing ERC721 ids or keeping track of request ids, anything you want, really.\r\n *\r\n * Include with `using Counter for Counter.Counter;`\r\n * @notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\r\n * Does not protect from overflows, but if you have 2^256 ids, you have other problems.\r\n * (But actually, it's generally impossible to increment a counter this many times, energy wise\r\n * so it's not something you have to worry about.)\r\n */\r\nlibrary Counter {\r\n    struct Counter {\r\n        uint256 current; // default: 0\r\n    }\r\n\r\n    function next(Counter storage index) internal returns (uint256) {\r\n        index.current += 1;\r\n        return index.current;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\dev\\tokenmint-github\\contracts\\open-zeppelin-contracts\\drafts\\Counter.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/open-zeppelin-contracts/drafts/Counter.sol",
    "exportedSymbols": {
      "Counter": [
        3136
      ]
    },
    "id": 3137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3115,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counter\r\n@author Matt Condon (@shrugs)\r\n@dev Provides an incrementing uint256 id acquired by the `Counter#next` getter.\r\nUse this for issuing ERC721 ids or keeping track of request ids, anything you want, really.\r\n\n * Include with `using Counter for Counter.Counter;`\r\n@notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\r\nDoes not protect from overflows, but if you have 2^256 ids, you have other problems.\r\n(But actually, it's generally impossible to increment a counter this many times, energy wise\r\nso it's not something you have to worry about.)\r",
        "fullyImplemented": true,
        "id": 3136,
        "linearizedBaseContracts": [
          3136
        ],
        "name": "Counter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Counter.Counter",
            "id": 3118,
            "members": [
              {
                "constant": false,
                "id": 3117,
                "name": "current",
                "nodeType": "VariableDeclaration",
                "scope": 3118,
                "src": "716:15:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 3136,
            "src": "690:63:33",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "825:68:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3125,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "836:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 3127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3117,
                      "src": "836:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "853:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "836:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "836:18:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3131,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "872:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                        "typeString": "struct Counter.Counter storage pointer"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "current",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3117,
                    "src": "872:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3124,
                  "id": 3133,
                  "nodeType": "Return",
                  "src": "865:20:33"
                }
              ]
            },
            "documentation": null,
            "id": 3135,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "next",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3120,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "775:21:33",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3119,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3118,
                    "src": "775:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "774:23:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3123,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "816:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "815:9:33"
            },
            "scope": 3136,
            "src": "761:132:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3137,
        "src": "667:229:33"
      }
    ],
    "src": "0:898:33"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/open-zeppelin-contracts/drafts/Counter.sol",
    "exportedSymbols": {
      "Counter": [
        3136
      ]
    },
    "id": 3137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3115,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counter\r\n@author Matt Condon (@shrugs)\r\n@dev Provides an incrementing uint256 id acquired by the `Counter#next` getter.\r\nUse this for issuing ERC721 ids or keeping track of request ids, anything you want, really.\r\n\n * Include with `using Counter for Counter.Counter;`\r\n@notice Does not allow an Id of 0, which is popularly used to signify a null state in solidity.\r\nDoes not protect from overflows, but if you have 2^256 ids, you have other problems.\r\n(But actually, it's generally impossible to increment a counter this many times, energy wise\r\nso it's not something you have to worry about.)\r",
        "fullyImplemented": true,
        "id": 3136,
        "linearizedBaseContracts": [
          3136
        ],
        "name": "Counter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Counter.Counter",
            "id": 3118,
            "members": [
              {
                "constant": false,
                "id": 3117,
                "name": "current",
                "nodeType": "VariableDeclaration",
                "scope": 3118,
                "src": "716:15:33",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 3136,
            "src": "690:63:33",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "825:68:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3125,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "836:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 3127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3117,
                      "src": "836:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 3128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "853:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "836:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "836:18:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3131,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "872:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                        "typeString": "struct Counter.Counter storage pointer"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "current",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3117,
                    "src": "872:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3124,
                  "id": 3133,
                  "nodeType": "Return",
                  "src": "865:20:33"
                }
              ]
            },
            "documentation": null,
            "id": 3135,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "next",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3120,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "775:21:33",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3119,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3118,
                    "src": "775:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$3118_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "774:23:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 3124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3123,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "816:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "815:9:33"
            },
            "scope": 3136,
            "src": "761:132:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3137,
        "src": "667:229:33"
      }
    ],
    "src": "0:898:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-02-04T16:11:06.202Z"
}