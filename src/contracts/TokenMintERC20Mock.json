{
  "contractName": "TokenMintERC20Mock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\nimport '../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol';\n\n/**\n * @title Used only to reference imported file so that ERC20Mock would be\n * compiled and later used in contract tests\n *\n * @author TokenMint.io\n *\n */\ncontract TokenMintERC20Mock is ERC20Mock {\n}\n",
  "sourcePath": "D:\\dev\\tokenmint-github\\contracts\\ERC20\\openzeppelin_test_reference\\TokenMintERC20Mock.sol",
  "ast": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/ERC20/openzeppelin_test_reference/TokenMintERC20Mock.sol",
    "exportedSymbols": {
      "TokenMintERC20Mock": [
        157
      ]
    },
    "id": 158,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 153,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/D/dev/tokenmint-github/node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "id": 154,
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 10865,
        "src": "26:83:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 155,
              "name": "ERC20Mock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10864,
              "src": "299:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$10864",
                "typeString": "contract ERC20Mock"
              }
            },
            "id": 156,
            "nodeType": "InheritanceSpecifier",
            "src": "299:9:2"
          }
        ],
        "contractDependencies": [
          10864,
          11308,
          11405
        ],
        "contractKind": "contract",
        "documentation": "@title Used only to reference imported file so that ERC20Mock would be\ncompiled and later used in contract tests\n * @author TokenMint.io\n ",
        "fullyImplemented": false,
        "id": 157,
        "linearizedBaseContracts": [
          157,
          10864,
          11308,
          11405
        ],
        "name": "TokenMintERC20Mock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 158,
        "src": "268:44:2"
      }
    ],
    "src": "0:313:2"
  },
  "legacyAST": {
    "absolutePath": "/D/dev/tokenmint-github/contracts/ERC20/openzeppelin_test_reference/TokenMintERC20Mock.sol",
    "exportedSymbols": {
      "TokenMintERC20Mock": [
        157
      ]
    },
    "id": 158,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 153,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/D/dev/tokenmint-github/node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/mocks/ERC20Mock.sol",
        "id": 154,
        "nodeType": "ImportDirective",
        "scope": 158,
        "sourceUnit": 10865,
        "src": "26:83:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 155,
              "name": "ERC20Mock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10864,
              "src": "299:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$10864",
                "typeString": "contract ERC20Mock"
              }
            },
            "id": 156,
            "nodeType": "InheritanceSpecifier",
            "src": "299:9:2"
          }
        ],
        "contractDependencies": [
          10864,
          11308,
          11405
        ],
        "contractKind": "contract",
        "documentation": "@title Used only to reference imported file so that ERC20Mock would be\ncompiled and later used in contract tests\n * @author TokenMint.io\n ",
        "fullyImplemented": false,
        "id": 157,
        "linearizedBaseContracts": [
          157,
          10864,
          11308,
          11405
        ],
        "name": "TokenMintERC20Mock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 158,
        "src": "268:44:2"
      }
    ],
    "src": "0:313:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-02-04T16:11:06.173Z"
}